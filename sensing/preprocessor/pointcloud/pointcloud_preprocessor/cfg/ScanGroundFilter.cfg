#! /usr/bin/env python

PACKAGE = 'pointcloud_preprocessor'

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator ()
# def add (self, name, paramtype, level, description, default = None, min = None, max = None, edit_method = ""):
gen.add ("base_frame", str_t, 0, "base frame", "base_link")
gen.add ("global_slope_max", double_t, 0, "Entire cloud space general slope, used on reclassification", 10.0, 0.0, 30.0)
gen.add ("local_slope_max_angle", double_t, 0, "Local slope between points inside the same ray", 30.0, 0.0, 60.0)
gen.add ("radial_divider_angle", double_t, 0, "Angle in Degrees between dividers", 1.0, 0.1, 360.0)
gen.add ("split_points_distance_tolerance", double_t, 0, "Distance threshold between points in meters to separate/merge the next point", 0.2, 0.0, 1.0)
gen.add ("split_height_distance", double_t, 0, "Height threshold to separate object and ground", 0.2, 0.0, 1.0)
gen.add ("use_virtual_ground_point", bool_t, 0, "Use lidar below ground point as a first ground point", True)

exit (gen.generate (PACKAGE, "pointcloud_preprocessor", "ScanGroundFilter"))
