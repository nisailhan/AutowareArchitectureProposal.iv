#! /usr/bin/env python

PACKAGE = 'velocity_controller'

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator ()

# delay compensation
gen.add ("delay_compensation_time", double_t, 0, "delay compensation[s]", 0.17, 0.0, 2.0)

# state transition
gen.add ("drive_state_stop_dist", double_t, 0, "distance to stopline to entry drive state[m]", 0.5, 0.0, 4.0)
gen.add ("stopping_state_stop_dist", double_t, 0, "distance to stopline to entry stopping state [m]", 0.49, 0.0, 4.0)
gen.add ("stopped_state_entry_vel", double_t, 0, "velocity to entry stop state [m/s]", 0.1, 0.0, 1.0)
gen.add ("stopped_state_entry_acc", double_t, 0, "acceleration to entry stop state [m/s^2]", 0.1, 0.0, 1.0)
gen.add ("emergency_state_overshoot_stop_dist", double_t, 0, "distance to stopline to entry emergency state [m]", 1.5, 0.0, 10.0)
gen.add ("emergency_state_traj_trans_dev", double_t, 0, "translational deviation to trajectory to entry emergency state [m]", 3.0, 0.0, 10.0)
gen.add ("emergency_state_traj_rot_dev", double_t, 0, "rotational deviation to trajectory to entry emergency state [m]", 0.7854, 0.0, 2.0)

# drive state
gen.add ("kp", double_t, 0, "Kp", 1.0, 0.0, 5.0)
gen.add ("ki", double_t, 0, "Ki", 0.1, 0.0, 5.0)
gen.add ("kd", double_t, 0, "Kd", 0.0, 0.0, 5.0)
gen.add ("max_out", double_t, 0, "max out[m/s^2]", 1.0, 0.0, 5.0)
gen.add ("min_out", double_t, 0, "min out[m/s^2]", -1.0, -5.0, 0.0)
gen.add ("max_p_effort", double_t, 0, "max_p_effort[m/s^2]", 1.0, 0.1, 5.0)
gen.add ("min_p_effort", double_t, 0, "min_p_effort[m/s^2]", -1.0, -5.0, 0.0)
gen.add ("max_i_effort", double_t, 0, "max_i_effort[m/s^2]", 0.3, 0.0, 1.0)
gen.add ("min_i_effort", double_t, 0, "min_i_effort[m/s^2]", -0.3, -1.0, 0.0)
gen.add ("max_d_effort", double_t, 0, "max_d_effort[m/s^2]", 0.0, 0.0, 5.0)
gen.add ("min_d_effort", double_t, 0, "min_d_effort[m/s^2]", 0.0, 0.0, 5.0)
gen.add ("lpf_vel_error_gain", double_t, 0, "lpf_velocity_error_gain", 0.9, 0.0, 3.0)
gen.add ("current_velocity_threshold_pid_integration", double_t, 0, "current_velocity_threshold_pid_integration[m/s]", 0.5, 0.0, 2.0)

# stopping state
gen.add ("smooth_stop_weak_brake_time", double_t, 0, "weak brake time[s]", 1.0, 0.0, 2.0)
gen.add ("smooth_stop_weak_brake_acc", double_t, 0, "weak brake acc[m/s^2]", -1.0, -5.0, 0.0)
gen.add ("smooth_stop_increasing_brake_time", double_t, 0, "increasing brake time[s]", 1.0, 0.0, 5.0)
gen.add ("smooth_stop_increasing_brake_gradient", double_t, 0, "increasing brake gradient[m/s^3]", -0.1, -1.0, 0.0)
gen.add ("smooth_stop_stop_brake_time", double_t, 0, "stop brake time[s]", 1.0, 0.0, 5.0)
gen.add ("smooth_stop_stop_brake_acc", double_t, 0, "stop brake acc[m/s^2]", -3.4, -5.0, 0.0)

# stop state
gen.add ("stopped_vel", double_t, 0, "stop velocity [m/s]", 0.0, 0.0, 1.0)
gen.add ("stopped_acc", double_t, 0, "stop acceleration [m/s^2]", -3.4, -6.0, 6.0)

# emergency state
gen.add ("emergency_vel", double_t, 0, "emergency stop vel[m/s]", 0.0, -10.0, 0.0)
gen.add ("emergency_acc", double_t, 0, "emergency stop acc[m/s^2]", -5.0, -10.0, 0.0)
gen.add ("emergency_jerk", double_t, 0, "emergency stop jerk[m/s^3]", -3.0, -10.0, 0.0)

# acceleration limit
gen.add ("max_acc", double_t, 0, "max acc[m/s^2]", 3.0, 0.1, 5.0)
gen.add ("min_acc", double_t, 0, "min acc[m/s^2]", -5.0, -10.0, -0.1)

# jerk limit
gen.add ("max_jerk", double_t, 0, "max jerk[m/s^3]", 2.0, 0.1, 5.0)
gen.add ("min_jerk", double_t, 0, "min jerk[m/s^3]", -5.0, -10.0, -0.1)

# slope compensation
gen.add ("lpf_pitch_gain", double_t, 0, "lpf pitch gain", 0.95, 0.0, 2.0)
gen.add ("max_pitch_rad", double_t, 0, "max pitch rad[rad]", 0.1, 0.0, 1.0)
gen.add ("min_pitch_rad", double_t, 0, "min pitch rad[rad]", -0.1, -1.0, 0.0)

exit (gen.generate (PACKAGE, "velocity_controller", "VelocityController"))
