<?xml version="1.0"?>

<launch>
  <arg name="input/pointcloud" default="/sensing/lidar/no_ground/pointcloud"/>
  <arg name="input/map" default="/map/pointcloud_map" />
  <arg name="output/clusters" default="clusters"/>
  <arg name="use_pointcloud_map" default="false"/>
  <arg name="voxel_grid_param_path" default="$(find euclidean_cluster)/config/voxel_grid.yaml" />
  <arg name="euclidean_param_path" default="$(find euclidean_cluster)/config/euclidean_cluster.yaml" />

  <node pkg="nodelet" type="nodelet" name="euclidean_cluster_manager" args="manager" output="screen" />
  <node pkg="nodelet" type="nodelet" name="$(anon voxel_grid_filter)" args="load pcl/VoxelGrid euclidean_cluster_manager" output="screen">
    <remap from="~input" to="$(arg input/pointcloud)" />
    <remap from="~output" to="voxel_grid_filtered/pointcloud" />
    <rosparam command="load" file="$(arg voxel_grid_param_path)" />
  </node>
  <node if="$(arg use_pointcloud_map)" pkg="nodelet" type="nodelet" name="$(anon compare_map_filter)" args="load points_preprocessor/voxel_based_compare_map_filter_nodelet euclidean_cluster_manager" output="screen">
    <remap from="~input" to="voxel_grid_filtered/pointcloud"/>
    <remap from="~map" to="$(arg input/map)"/>
    <remap from="~output" to="compare_map_filtered/pointcloud"/>
  </node>

  <node pkg="nodelet" type="nodelet" name="$(anon euclidean_cluster)" args="load euclidean_cluster/euclidean_cluster_nodelet euclidean_cluster_manager" output="screen">
    <remap if="$(arg use_pointcloud_map)" from="~input" to="compare_map_filtered/pointcloud"/>
    <remap unless="$(arg use_pointcloud_map)" from="~input" to="voxel_grid_filtered/pointcloud"/>
    <remap from="~output" to="$(arg output/clusters)"/>
    <remap from="~debug/clusters" to="debug/clusters" />
    <rosparam command="load" file="$(arg euclidean_param_path)" />
  </node>
</launch>
